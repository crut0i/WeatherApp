name: Main

on:
  pull_request:
    branches: ["dev"]
    paths-ignore:
      - "docs/**"
      - "README.md"
      - "LICENSE"
      - "**.md"
      - "tests/**"
      - "docker/**"
  merge_group:
    branches: ["dev"]
  workflow_dispatch:
  workflow_call:

jobs:
  reviewers:
    name: Reviewers
    runs-on: ubuntu-latest
    steps:
      - name: Request review
        uses: necojackarc/auto-request-review@v0.13.0
        if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' && !contains(github.event.pull_request.title, '[[skip review]]') }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: ./.github/reviewers.yml
          use_local: true

  formatting:
    uses: ./.github/workflows/formatting.yml
    secrets: inherit
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' && !contains(github.event.pull_request.title, '[[skip formatting]]') }}
    permissions:
      contents: write
      issues: write

  lint:
    name: Linting
    needs: formatting
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' && !contains(github.event.pull_request.title, '[[skip linting]]') }}
    permissions:
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.3"

      - name: Cache pip
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dev-dependencies
        id: install-dev-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          pip install -e ".[dev]"

      - name: Ruff â€” static analysis
        id: ruff-static-analysis
        run: |
          ruff --config pyproject.toml check .

  tests:
    name: Tests
    needs: lint
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' && !contains(github.event.pull_request.title, '[[skip tests]]') }}
    permissions:
      actions: read
      contents: read
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        id: install-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio
          pip install -e ".[dev]"

      - name: Run tests
        id: run-tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  reports:
    name: Generate test reports
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' && !contains(github.event.pull_request.title, '[[skip coverage]]') }}
    permissions:
      actions: read
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.3"

      - name: Cache pip
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        id: install-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio pytest-md-report
          pip install -e ".[dev]"

      - name: Run coverage for barecheck
        id: barecheck-coverage
        run: |
          pytest --cov --cov-report=lcov:lcov.info

      - name: Run tests for pytest-md-report
        id: pytest-md-report
        shell: bash
        run: |
          pytest --md-report --md-report-flavor gfm --md-report-output md_report.md

      - name: Upload to Barecheck
        id: upload-to-barecheck
        uses: barecheck/code-coverage-action@v1
        with:
          barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
          lcov-file: "lcov.info"
          minimum-ratio: 0
          send-summary-comment: true
          show-annotations: "warning"

      - name: Render the report to the PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: test-report
          recreate: true
          path: md_report.md
